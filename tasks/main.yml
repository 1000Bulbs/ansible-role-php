# tasks/main.yml
---
- name: Ensure PPA dependencies are installed
  when: ansible_os_family == "Debian"
  ansible.builtin.apt:
    name: "{{ php_ppa_dependencies }}"
    state: present
    update_cache: true

- name: Ensure PHP PPA source list file exists
  register: php_ppa_file
  ansible.builtin.stat:
    path: "{{ php_source_list_file }}"

- name: Ensure Ondrej PHP PPA installed
  when:
    - ansible_os_family == "Debian"
    - not php_ppa_file.stat.exists
  environment:
    LC_ALL: C.UTF-8
  changed_when: false
  ansible.builtin.command: add-apt-repository -y ppa:{{ php_repo }}

- name: Ensure apt cache
  when: ansible_os_family == "Debian"
  ansible.builtin.apt:
    update_cache: true

- name: Build PHP package list
  ansible.builtin.set_fact:
    php_packages: "{{ php_base_packages + php_extensions | map('regex_replace', '^(.*)$', 'php' ~ php_version ~ '-\\1') | list }}"

- name: Ensure php packages are installed
  when: php_packages | length > 0
  notify: Restart php-fpm
  ansible.builtin.apt:
    name: "{{ php_packages }}"
    state: present
    update_cache: true

- name: Ensure PHP SAPI config directories exist
  loop: "{{ php_ini_sapi_configs }}"
  loop_control:
    label: "{{ item.sapi }}"
  ansible.builtin.file:
    path: /etc/php/{{ php_version }}/{{ item.sapi }}
    state: directory
    mode: "0755"

- name: Ensure PHP INI configuration files
  loop: "{{ php_ini_sapi_configs }}"
  loop_control:
    label: "{{ item.sapi }}"
  vars:
    disable_functions: "{{ item.disable_functions }}"
    expose_php: "{{ item.expose_php }}"
    memory_limit: "{{ item.memory_limit }}"
  ansible.builtin.template:
    src: php.ini.j2
    dest: /etc/php/{{ php_version }}/{{ item.sapi }}/php.ini
    owner: root
    group: root
    mode: "0644"
